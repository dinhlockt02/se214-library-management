openapi: 3.0.3
info:
  title: Library Management Service API
  description: Library Management Service API
  version: 1.0.0
servers:
  - url: 'http://localhost'
paths:
  /auth/login:
    post:
      tags:
        - Auth
      description: Get authentication token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        200:
          description: login/retrieve token successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /loaidocgia:
    get:
      tags:
        - Loai doc gia
      description: Get danh sach loai doc gia
      responses:
        200:
          description: Get danh sach loai doc gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Loai doc gia
      description: Create loai doc gia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoaiDocGiaDto'
      responses:
        201:
          description: Create loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /loaidocgia/{maLoaiDocGia}:
    get:
      tags:
        - Loai doc gia
      description: Get loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      responses:
        200:
          description: Get loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Loai doc gia
      description: Update loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoaiDocGiaDto'
      responses:
        200:
          description: Update loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Loai doc gia
      description: Delete loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      responses:
        200:
          description: Delete loai doc gia successful
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LoginDto:
      type: object
      properties:
        email:
          type: string
          example: test@email.com
        password:
          type: string
          example: 12345678
    LoginPresenter:
      type: object
      properties:
        token:
          type: string
          description: Jwt token format
    PostLoaiDocGiaDto:
      type: object
      properties:
        tenLoaiDocGia:
          type: string
    PutLoaiDocGiaDto:
      type: object
      properties:
        tenLoaiDocGia:
          type: string
    LoaiDocGiaPresenter:
      type: object
      properties:
        maLoaiDocGia:
          type: string
        tenLoaiDocGia:
          type: string
  responses:
    BadRequestError:
      description: provide bad request
    ForbiddenError:
      description: do not have permission to view this resource
    NotFoundError:
      description: resource not found
    UnauthorizedError:
      description: token is missing
    InternalServerError:
      description: internal server error
