openapi: 3.0.3
info:
  title: Library Management Service API
  description: Library Management Service API
  version: 1.0.0
servers:
  - url: 'http://localhost'
paths:
  /auth/login:
    post:
      tags:
        - Auth
      description: Get authentication token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        200:
          description: login/retrieve token successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /loaidocgia:
    get:
      tags:
        - Loai doc gia
      description: Get danh sach loai doc gia
      responses:
        200:
          description: Get danh sach loai doc gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Loai doc gia
      description: Create loai doc gia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoaiDocGiaDto'
      responses:
        201:
          description: Create loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /loaidocgia/{maLoaiDocGia}:
    get:
      tags:
        - Loai doc gia
      description: Get loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      responses:
        200:
          description: Get loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Loai doc gia
      description: Update loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoaiDocGiaDto'
      responses:
        200:
          description: Update loai doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoaiDocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Loai doc gia
      description: Delete loai doc gia by ma loai doc gia
      parameters:
        - in: path
          name: maLoaiDocGia
          schema:
            type: string
          required: true
      responses:
        200:
          description: Delete loai doc gia successful
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /docgia:
    get:
      tags:
        - Doc gia
      description: Get danh sach doc gia
      responses:
        200:
          description: Get danh sach doc gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      description: Create new doc gia
      tags:
        - Doc gia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocGiaDto'
      responses:
        201:
          description: Create doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocGiaPresenter'

        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /docgia/{maDocGia}:
    get:
      tags:
        - Doc gia
      description: Get doc gia by id
      parameters:
        - in: path
          name: maDocGia
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      description: Update doc gia successful
      tags:
        - Doc gia
      parameters:
        - in: path
          name: maDocGia
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocGiaDto'
      responses:
        200:
          description: Update doc gia successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Doc gia
      description: Delete doc gia by id
      parameters:
        - in: path
          name: maDocGia
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete doc gia successful
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /theloai:
    get:
      tags:
        - The loai
      description: Get danh sach the loai
      responses:
        200:
          description: Get danh sach the loai successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TheLoaiPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      description: Create new the loai
      tags:
        - The loai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheLoaiDto'
      responses:
        201:
          description: Create the loai successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheLoaiPresenter'

        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /theloai/{maTheLoai}:
    get:
      tags:
        - The loai
      description: Get the loai by id
      parameters:
        - in: path
          name: maTheLoai
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get the loai successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheLoaiPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      description: Update the loai successful
      tags:
        - The loai
      parameters:
        - in: path
          name: maTheLoai
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheLoaiDto'
      responses:
        200:
          description: Update the loai successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheLoaiPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - The loai
      description: Delete the loai by id
      parameters:
        - in: path
          name: maTheLoai
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete the loai successful
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tacgia:
    get:
      summary: Get danh sach tac gia
      tags:
        - Tac gia
      responses:
        200:
          description: Get danh sach tac gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TacGiaDto'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create tac gia
      tags:
        - Tac gia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacGiaDto'
      responses:
        201:
          description: Get danh sach tac gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TacGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tacgia/{maTacGia}:
    get:
      summary: Get tac gia by ma tac gia
      tags:
        - Tac gia
      parameters:
        - in: path
          name: maTacGia
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get tac gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TacGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update tac gia by ma tac gia
      tags:
        - Tac gia
      parameters:
        - in: path
          name: maTacGia
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacGiaDto'
      responses:
        200:
          description: Update tac gia successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TacGiaPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete tac gia by ma tac gia
      tags:
        - Tac gia
      parameters:
        - in: path
          name: maTacGia
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete tac gia successful
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /dausach:
    get:
      summary: Get danh sach dau sach
      tags:
        - Dau sach
      responses:
        200:
          description: Get danh sach dau sach successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DauSachPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create dau sach
      tags:
        - Dau sach
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DauSachDto'
      responses:
        201:
          description: Create dau sach successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DauSachPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /dausach/{maDauSach}:
    get:
      summary: Get dau sach by ma dau sach
      tags:
        - Dau sach
      parameters:
        - in: path
          name: maDauSach
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get dau sach successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DauSachPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update dau sach
      tags:
        - Dau sach
      parameters:
        - in: path
          name: maDauSach
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DauSachDto'
      responses:
        200:
          description: Create dau sach successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DauSachPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete dau sach by ma dau sach
      tags:
        - Dau sach
      parameters:
        - in: path
          name: maDauSach
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete dau sach successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DauSachPresenter'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LoginDto:
      type: object
      properties:
        email:
          type: string
          example: test@email.com
        password:
          type: string
          example: 12345678
    LoginPresenter:
      type: object
      properties:
        token:
          type: string
          description: Jwt token format
    PostLoaiDocGiaDto:
      type: object
      properties:
        tenLoaiDocGia:
          type: string
    PutLoaiDocGiaDto:
      type: object
      properties:
        tenLoaiDocGia:
          type: string
    LoaiDocGiaPresenter:
      type: object
      properties:
        maLoaiDocGia:
          type: string
        tenLoaiDocGia:
          type: string
    DocGiaDto:
      type: object
      properties:
        hoTen:
          type: string
        maLoaiDocGia:
          type: string
        ngaySinh:
          type: string
          format: date-time
        diaChi:
          type: string
        email:
          type: string
        ngayLapThe:
          type: string
          format: date-time
    DocGiaPresenter:
      type: object
      properties:
        maDocGia:
          type: string
        hoTen:
          type: string
        loaiDocGia:
          type: string
        ngaySinh:
          type: string
          format: date-time
        diaChi:
          type: string
        email:
          type: string
        ngayLapThe:
          type: string
          format: date-time
        ngayHetHan:
          type: string
          format: date-time,
        tongNo:
          type: integer
          minimum: 0
    TheLoaiDto:
      type: object
      properties:
        tenTheLoai:
          type: string
    TheLoaiPresenter:
      type: object
      properties:
        maTheLoai:
          type: string
        tenTheLoai:
          type: string
    TacGiaDto:
      type: object
      properties:
        tenTacGia:
          type: string
    TacGiaPresenter:
      type: object
      properties:
        maTacGia:
          type: string
        tenTacGia:
          type: string
    DauSachDto:
      type: object
      properties:
        tenDauSach:
          type: string
        theLoai:
          type: array
          items:
            type: string
        tacGia:
          type: array
          items:
            type: string
    DauSachPresenter:
      type: object
      properties:
        maDauSach:
          type: string
        tenDauSach:
          type: string
        theLoai:
          type: array
          items:
            $ref: '#/components/schemas/TheLoaiPresenter'
        tacGia:
          type: array
          items:
            $ref: '#/components/schemas/TacGiaPresenter'
  responses:
    BadRequestError:
      description: provide bad request
    ForbiddenError:
      description: do not have permission to view this resource
    NotFoundError:
      description: resource not found
    UnauthorizedError:
      description: token is missing
    InternalServerError:
      description: internal server error
