// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wireimpl

import (
	"daijoubuteam.xyz/se214-library-management/config"
	"daijoubuteam.xyz/se214-library-management/core/repository"
	"daijoubuteam.xyz/se214-library-management/core/service"
	"daijoubuteam.xyz/se214-library-management/infrastructure/mysql"
	"daijoubuteam.xyz/se214-library-management/infrastructure/service"
	"daijoubuteam.xyz/se214-library-management/usecase/auth"
	"daijoubuteam.xyz/se214-library-management/usecase/dau_sach"
	"daijoubuteam.xyz/se214-library-management/usecase/doc_gia"
	"daijoubuteam.xyz/se214-library-management/usecase/loai_doc_gia"
	"daijoubuteam.xyz/se214-library-management/usecase/nhap_sach"
	"daijoubuteam.xyz/se214-library-management/usecase/tac_gia"
	"daijoubuteam.xyz/se214-library-management/usecase/the_loai"
	"daijoubuteam.xyz/se214-library-management/usecase/thu_thu"
	"github.com/google/wire"
	"github.com/jmoiron/sqlx"
)

// Injectors from wire.go:

func InitThuThuUsecase(db *sqlx.DB) thuthu.ThuThuUsecase {
	bcryptPasswordHasher := service.NewBcryptPasswordHasher()
	thuThuRepository := mysql.NewThuThuRepository(db)
	thamSoRepository := mysql.NewThamSoRepository(db)
	thuThuService := thuthu.NewThuThuService(bcryptPasswordHasher, thuThuRepository, thamSoRepository)
	return thuThuService
}

func InitAuthUsecase(db *sqlx.DB) auth.AuthUsecase {
	bcryptPasswordHasher := service.NewBcryptPasswordHasher()
	thuThuRepository := mysql.NewThuThuRepository(db)
	thamSoRepository := mysql.NewThamSoRepository(db)
	thuThuService := thuthu.NewThuThuService(bcryptPasswordHasher, thuThuRepository, thamSoRepository)
	jwtConfig := config.GetJwtConfig()
	jwtTokenServiceImpl := service.NewJwtTokenServiceImpl(jwtConfig)
	authService := auth.NewAuthService(thuThuService, bcryptPasswordHasher, jwtTokenServiceImpl)
	return authService
}

func InitLoaiDocGiaUsecase(db *sqlx.DB) loaidocgia.LoaiDocGiaUsecase {
	loaiDocGiaRepository := mysql.NewLoaiDocGiaRepository(db)
	loaiDocGiaService := loaidocgia.NewLoaiDocGiaService(loaiDocGiaRepository)
	return loaiDocGiaService
}

func InitDocGiaUsecase(db *sqlx.DB) docgia.DocGiaUsecase {
	docGiaRepository := mysql.NewDocGiaRepository(db)
	loaiDocGiaRepository := mysql.NewLoaiDocGiaRepository(db)
	loaiDocGiaService := loaidocgia.NewLoaiDocGiaService(loaiDocGiaRepository)
	thamSoRepository := mysql.NewThamSoRepository(db)
	docGiaService := docgia.NewDocGiaService(docGiaRepository, loaiDocGiaService, thamSoRepository)
	return docGiaService
}

func InitTheLoaiUsecase(db *sqlx.DB) theloai.TheLoaiUsecase {
	theLoaiRepository := mysql.NewTheLoaiRepository(db)
	theLoaiService := theloai.NewTheLoaiService(theLoaiRepository)
	return theLoaiService
}

func InitTacGiaUsecase(db *sqlx.DB) tacgia.TacGiaUsecase {
	tacGiaRepository := mysql.NewTacGiaRepository(db)
	tacGiaService := tacgia.NewTacGiaService(tacGiaRepository)
	return tacGiaService
}

func InitDauSachUsecase(db *sqlx.DB) dausach.DauSachUsecase {
	dauSachRepository := mysql.NewDauSachRepository(db)
	tacGiaRepository := mysql.NewTacGiaRepository(db)
	tacGiaService := tacgia.NewTacGiaService(tacGiaRepository)
	theLoaiRepository := mysql.NewTheLoaiRepository(db)
	theLoaiService := theloai.NewTheLoaiService(theLoaiRepository)
	dauSachService := dausach.NewDauSachService(dauSachRepository, tacGiaService, theLoaiService)
	return dauSachService
}

func InitNhapSachUsecase(db *sqlx.DB) nhapsach.NhapSachUsecase {
	dauSachRepository := mysql.NewDauSachRepository(db)
	phieuNhapRepository := mysql.NewPhieuNhapRepository(db, dauSachRepository)
	tacGiaRepository := mysql.NewTacGiaRepository(db)
	tacGiaService := tacgia.NewTacGiaService(tacGiaRepository)
	theLoaiRepository := mysql.NewTheLoaiRepository(db)
	theLoaiService := theloai.NewTheLoaiService(theLoaiRepository)
	dauSachService := dausach.NewDauSachService(dauSachRepository, tacGiaService, theLoaiService)
	nhapSachService := nhapsach.NewNhapSachService(phieuNhapRepository, dauSachService)
	return nhapSachService
}

// wire.go:

var PasswordHasherSet = wire.NewSet(wire.Bind(new(coreservice.PasswordHasher), new(*service.BcryptPasswordHasher)), service.NewBcryptPasswordHasher)

var JwtTokenServiceSet = wire.NewSet(wire.Bind(new(coreservice.JwtTokenService), new(*service.JwtTokenServiceImpl)), service.NewJwtTokenServiceImpl, config.GetJwtConfig)

var ThuThuRepositorySet = wire.NewSet(wire.Bind(new(repository.ThuThuRepository), new(*mysql.ThuThuRepository)), mysql.NewThuThuRepository)

var ThamSoRepositorySet = wire.NewSet(wire.Bind(new(repository.ThamSoRepository), new(*mysql.ThamSoRepository)), mysql.NewThamSoRepository)

var LoaiDocGiaRepositorySet = wire.NewSet(wire.Bind(new(repository.LoaiDocGiaRepository), new(*mysql.LoaiDocGiaRepository)), mysql.NewLoaiDocGiaRepository)

var DocGiaRepositorySet = wire.NewSet(wire.Bind(new(repository.DocGiaRepository), new(*mysql.DocGiaRepository)), mysql.NewDocGiaRepository)

var TheLoaiRepositorySet = wire.NewSet(wire.Bind(new(repository.TheLoaiRepository), new(*mysql.TheLoaiRepository)), mysql.NewTheLoaiRepository)

var TacGiaRepositorySet = wire.NewSet(wire.Bind(new(repository.TacGiaRepository), new(*mysql.TacGiaRepository)), mysql.NewTacGiaRepository)

var DauSachRepositorySet = wire.NewSet(wire.Bind(new(repository.DauSachRepository), new(*mysql.DauSachRepository)), mysql.NewDauSachRepository)

var PhieuNhapRepositorySet = wire.NewSet(wire.Bind(new(repository.PhieuNhapRepository), new(*mysql.PhieuNhapRepository)), mysql.NewPhieuNhapRepository)

var ThuThuUsecaseSet = wire.NewSet(wire.Bind(new(thuthu.ThuThuUsecase), new(*thuthu.ThuThuService)), thuthu.NewThuThuService, PasswordHasherSet, ThuThuRepositorySet, ThamSoRepositorySet)

var AuthUsecaseSet = wire.NewSet(wire.Bind(new(auth.AuthUsecase), new(*auth.AuthService)), auth.NewAuthService, ThuThuUsecaseSet, JwtTokenServiceSet)

var LoaiDocGiaUsecaseSet = wire.NewSet(wire.Bind(new(loaidocgia.LoaiDocGiaUsecase), new(*loaidocgia.LoaiDocGiaService)), loaidocgia.NewLoaiDocGiaService, LoaiDocGiaRepositorySet)

var DocGiaUsecaseSet = wire.NewSet(wire.Bind(new(docgia.DocGiaUsecase), new(*docgia.DocGiaService)), docgia.NewDocGiaService, DocGiaRepositorySet, LoaiDocGiaUsecaseSet, ThamSoRepositorySet)

var TheLoaiUsecaseSet = wire.NewSet(wire.Bind(new(theloai.TheLoaiUsecase), new(*theloai.TheLoaiService)), theloai.NewTheLoaiService, TheLoaiRepositorySet)

var TacGiaUsecaseSet = wire.NewSet(wire.Bind(new(tacgia.TacGiaUsecase), new(*tacgia.TacGiaService)), tacgia.NewTacGiaService, TacGiaRepositorySet)

var DauSachUsecaseSet = wire.NewSet(wire.Bind(new(dausach.DauSachUsecase), new(*dausach.DauSachService)), dausach.NewDauSachService, TacGiaUsecaseSet, TheLoaiUsecaseSet, DauSachRepositorySet)

var NhapSachUsecaseSet = wire.NewSet(wire.Bind(new(nhapsach.NhapSachUsecase), new(*nhapsach.NhapSachService)), nhapsach.NewNhapSachService, DauSachUsecaseSet, PhieuNhapRepositorySet)
